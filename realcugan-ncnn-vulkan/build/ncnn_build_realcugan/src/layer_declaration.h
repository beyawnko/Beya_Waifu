// Layer Declaration header
//
// This file is auto-generated by cmake, don't edit it.

#include "layer/convolution.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution) }
#include "layer/x86/convolution_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86) }
#include "layer/vulkan/convolution_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_vulkan) }
#include "layer/x86/convolution_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_avx512) }
#include "layer/x86/convolution_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_fma) }
#include "layer/x86/convolution_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_avx) }
#include "layer/crop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop) }
#include "layer/x86/crop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86) }
#include "layer/vulkan/crop_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_vulkan) }
#include "layer/x86/crop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_avx512) }
#include "layer/x86/crop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_fma) }
#include "layer/x86/crop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_avx) }
#include "layer/deconvolution.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution) }
#include "layer/x86/deconvolution_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86) }
#include "layer/vulkan/deconvolution_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_vulkan) }
#include "layer/x86/deconvolution_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86_avx512) }
#include "layer/x86/deconvolution_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86_fma) }
#include "layer/x86/deconvolution_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Deconvolution_x86_avx) }
#include "layer/eltwise.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise) }
#include "layer/x86/eltwise_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86) }
#include "layer/vulkan/eltwise_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_vulkan) }
#include "layer/x86/eltwise_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86_avx512) }
#include "layer/x86/eltwise_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86_fma) }
#include "layer/x86/eltwise_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Eltwise_x86_avx) }
#include "layer/flatten.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten) }
#include "layer/x86/flatten_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86) }
#include "layer/vulkan/flatten_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_vulkan) }
#include "layer/x86/flatten_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_avx512) }
#include "layer/x86/flatten_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_fma) }
#include "layer/x86/flatten_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_avx) }
#include "layer/innerproduct.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct) }
#include "layer/x86/innerproduct_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86) }
#include "layer/vulkan/innerproduct_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_vulkan) }
#include "layer/x86/innerproduct_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_avx512) }
#include "layer/x86/innerproduct_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_fma) }
#include "layer/x86/innerproduct_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_avx) }
#include "layer/input.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Input) }
#include "layer/pooling.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling) }
#include "layer/x86/pooling_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86) }
#include "layer/vulkan/pooling_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_vulkan) }
#include "layer/x86/pooling_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86_avx512) }
#include "layer/x86/pooling_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86_fma) }
#include "layer/x86/pooling_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Pooling_x86_avx) }
#include "layer/reduction.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reduction) }
#include "layer/relu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU) }
#include "layer/x86/relu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86) }
#include "layer/vulkan/relu_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_vulkan) }
#include "layer/x86/relu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_avx512) }
#include "layer/x86/relu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_fma) }
#include "layer/x86/relu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_avx) }
#include "layer/scale.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale) }
#include "layer/x86/scale_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86) }
#include "layer/vulkan/scale_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_vulkan) }
#include "layer/x86/scale_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86_avx512) }
#include "layer/x86/scale_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86_fma) }
#include "layer/x86/scale_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Scale_x86_avx) }
#include "layer/sigmoid.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid) }
#include "layer/x86/sigmoid_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86) }
#include "layer/vulkan/sigmoid_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_vulkan) }
#include "layer/x86/sigmoid_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_avx512) }
#include "layer/x86/sigmoid_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_fma) }
#include "layer/x86/sigmoid_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_avx) }
#include "layer/split.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Split) }
#include "layer/vulkan/split_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Split_vulkan) }
#include "layer/binaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp) }
#include "layer/x86/binaryop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86) }
#include "layer/vulkan/binaryop_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_vulkan) }
#include "layer/x86/binaryop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_avx512) }
#include "layer/x86/binaryop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_fma) }
#include "layer/x86/binaryop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_avx) }
#include "layer/padding.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding) }
#include "layer/x86/padding_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86) }
#include "layer/vulkan/padding_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_vulkan) }
#include "layer/x86/padding_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_avx512) }
#include "layer/x86/padding_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_fma) }
#include "layer/x86/padding_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_avx) }
#include "layer/interp.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp) }
#include "layer/x86/interp_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86) }
#include "layer/vulkan/interp_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_vulkan) }
#include "layer/x86/interp_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86_avx512) }
#include "layer/x86/interp_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86_fma) }
#include "layer/x86/interp_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Interp_x86_avx) }
#include "layer/packing.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing) }
#include "layer/x86/packing_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86) }
#include "layer/vulkan/packing_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_vulkan) }
#include "layer/x86/packing_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_avx512) }
#include "layer/x86/packing_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_fma) }
#include "layer/x86/packing_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_avx) }
#include "layer/cast.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast) }
#include "layer/x86/cast_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86) }
#include "layer/vulkan/cast_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_vulkan) }
#include "layer/x86/cast_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_avx512) }
#include "layer/x86/cast_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_fma) }
#include "layer/x86/cast_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_avx) }
#include "layer/pixelshuffle.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PixelShuffle) }
#include "layer/vulkan/pixelshuffle_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(PixelShuffle_vulkan) }
#include "layer/glu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GLU) }
#include "layer/fold.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Fold) }
#include "layer/unfold.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Unfold) }
#include "layer/gridsample.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample) }
#include "layer/x86/gridsample_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86) }
#include "layer/x86/gridsample_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86_avx512) }
#include "layer/x86/gridsample_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86_fma) }
#include "layer/x86/gridsample_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GridSample_x86_avx) }
#include "layer/cumulativesum.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CumulativeSum) }
#include "layer/copyto.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CopyTo) }
#include "layer/erf.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Erf) }
#include "layer/vulkan/erf_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Erf_vulkan) }
#include "layer/diag.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Diag) }
#include "layer/celu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CELU) }
#include "layer/vulkan/celu_vulkan.h"
namespace ncnn { DEFINE_LAYER_CREATOR(CELU_vulkan) }
#include "layer/shrink.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Shrink) }
#include "layer/rmsnorm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RMSNorm) }
#include "layer/x86/rmsnorm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RMSNorm_x86) }
#include "layer/x86/rmsnorm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RMSNorm_x86_avx512) }
#include "layer/x86/rmsnorm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RMSNorm_x86_fma) }
#include "layer/x86/rmsnorm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RMSNorm_x86_avx) }
#include "layer/spectrogram.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Spectrogram) }
#include "layer/inversespectrogram.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InverseSpectrogram) }
